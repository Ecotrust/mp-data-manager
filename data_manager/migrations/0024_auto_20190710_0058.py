# Generated by Django 2.2.3 on 2019-07-10 00:58

import django.contrib.sites.managers
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('data_manager', '0023_merge'),
    ]

    operations = [
        migrations.AlterModelManagers(
            name='layer',
            managers=[
                ('objects', django.contrib.sites.managers.CurrentSiteManager('site')),
            ],
        ),
        migrations.AlterModelManagers(
            name='theme',
            managers=[
                ('objects', django.contrib.sites.managers.CurrentSiteManager('site')),
            ],
        ),
        migrations.AlterField(
            model_name='layer',
            name='arcgis_layers',
            field=models.CharField(blank=True, help_text='comma separated list of arcgis layer IDs', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='layer',
            name='attribute_event',
            field=models.CharField(choices=[('click', 'click'), ('mouseover', 'mouseover')], default='click', max_length=35),
        ),
        migrations.AlterField(
            model_name='layer',
            name='bookmark',
            field=models.CharField(blank=True, help_text='link to view data layer in the planner', max_length=755, null=True),
        ),
        migrations.AlterField(
            model_name='layer',
            name='connect_companion_layers_to',
            field=models.ManyToManyField(blank=True, help_text='Select which main layer(s) you would like to use in conjuction with this companion layer.', null=True, related_name='_layer_connect_companion_layers_to_+', to='data_manager.Layer'),
        ),
        migrations.AlterField(
            model_name='layer',
            name='data_download',
            field=models.CharField(blank=True, help_text='link to download the data', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='layer',
            name='data_publish_date',
            field=models.DateField(blank=True, default=None, help_text='YYYY-MM-DD', null=True, verbose_name='Date published'),
        ),
        migrations.AlterField(
            model_name='layer',
            name='disable_arcgis_attributes',
            field=models.BooleanField(default=False, help_text='Click to disable clickable ArcRest layers'),
        ),
        migrations.AlterField(
            model_name='layer',
            name='espis_region',
            field=models.CharField(blank=True, choices=[('Mid Atlantic', 'Mid Atlantic')], help_text='Region to search within', max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='layer',
            name='espis_search',
            field=models.CharField(blank=True, help_text='keyphrase search for ESPIS Link', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='layer',
            name='has_companion',
            field=models.BooleanField(default=False, help_text='Check if this layer has a companion layer'),
        ),
        migrations.AlterField(
            model_name='layer',
            name='is_disabled',
            field=models.BooleanField(default=False, help_text='when disabled, the layer will still appear in the TOC, only disabled'),
        ),
        migrations.AlterField(
            model_name='layer',
            name='kml',
            field=models.CharField(blank=True, help_text='link to download the KML', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='layer',
            name='layer_type',
            field=models.CharField(choices=[('XYZ', 'XYZ'), ('WMS', 'WMS'), ('ArcRest', 'ArcRest'), ('radio', 'radio'), ('checkbox', 'checkbox'), ('Vector', 'Vector'), ('placeholder', 'placeholder')], help_text='use placeholder to temporarily remove layer from TOC', max_length=50),
        ),
        migrations.AlterField(
            model_name='layer',
            name='learn_more',
            field=models.CharField(blank=True, help_text='link to view description in the Learn section', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='layer',
            name='legend',
            field=models.CharField(blank=True, help_text='URL or path to the legend image file', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='layer',
            name='legend_title',
            field=models.CharField(blank=True, help_text='alternative to using the layer name', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='layer',
            name='map_tiles',
            field=models.CharField(blank=True, help_text='internal link to a page that details how others might consume the data', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='layer',
            name='metadata',
            field=models.CharField(blank=True, help_text='link to view/download the metadata', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='layer',
            name='mouseover_field',
            field=models.CharField(blank=True, help_text='feature level attribute used in mouseover display', max_length=75, null=True),
        ),
        migrations.AlterField(
            model_name='layer',
            name='order',
            field=models.PositiveSmallIntegerField(blank=True, default=10, help_text='input an integer to determine the priority/order of the layer being displayed (1 being the highest)', null=True),
        ),
        migrations.AlterField(
            model_name='layer',
            name='point_radius',
            field=models.IntegerField(blank=True, help_text='Used only for for Point layers (default is 2)', null=True),
        ),
        migrations.AlterField(
            model_name='layer',
            name='search_query',
            field=models.BooleanField(default=False, help_text='Select when layers are queryable - e.g. MDAT and CAS'),
        ),
        migrations.AlterField(
            model_name='layer',
            name='shareable_url',
            field=models.BooleanField(default=True, help_text='Indicates whether the data layer (e.g. map tiles) can be shared with others (through the Map Tiles Link)'),
        ),
        migrations.AlterField(
            model_name='layer',
            name='source',
            field=models.CharField(blank=True, help_text='link back to the data source', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='layer',
            name='thumbnail',
            field=models.URLField(blank=True, help_text='not sure we are using this any longer...', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='layer',
            name='wms_additional',
            field=models.TextField(blank=True, help_text='additional WMS key-value pairs: &key=value...', null=True, verbose_name='WMS Additional Fields'),
        ),
        migrations.AlterField(
            model_name='layer',
            name='wms_format',
            field=models.CharField(blank=True, help_text='most common: image/png. Only image types supported.', max_length=100, null=True, verbose_name='WMS Format'),
        ),
        migrations.AlterField(
            model_name='layer',
            name='wms_help',
            field=models.BooleanField(default=False, help_text='Enable simple selection for WMS fields. Only supports WMS 1.1.1'),
        ),
        migrations.AlterField(
            model_name='layer',
            name='wms_slug',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='WMS Layer Name'),
        ),
        migrations.AlterField(
            model_name='layer',
            name='wms_srs',
            field=models.CharField(blank=True, help_text='If not EPSG:3857 WMS requests will be proxied', max_length=100, null=True, verbose_name='WMS SRS'),
        ),
        migrations.AlterField(
            model_name='layer',
            name='wms_styles',
            field=models.CharField(blank=True, help_text='pre-determined styles, if exist', max_length=255, null=True, verbose_name='WMS Styles'),
        ),
        migrations.AlterField(
            model_name='layer',
            name='wms_time_item',
            field=models.CharField(blank=True, help_text='Time Attribute Field, if different from "TIME". Proxy only.', max_length=255, null=True, verbose_name='WMS Time Field'),
        ),
        migrations.AlterField(
            model_name='layer',
            name='wms_timing',
            field=models.CharField(blank=True, help_text='http://docs.geoserver.org/stable/en/user/services/wms/time.html#specifying-a-time', max_length=255, null=True, verbose_name='WMS Time'),
        ),
        migrations.AlterField(
            model_name='layer',
            name='wms_version',
            field=models.CharField(blank=True, choices=[(None, ''), ('1.0.0', '1.0.0'), ('1.1.0', '1.1.0'), ('1.1.1', '1.1.1'), ('1.3.0', '1.3.0')], help_text='WMS Versioning - usually either 1.1.1 or 1.3.0', max_length=10, null=True),
        ),
        migrations.AlterField(
            model_name='lookupinfo',
            name='dashstyle',
            field=models.CharField(choices=[('dot', 'dot'), ('dash', 'dash'), ('dashdot', 'dashdot'), ('longdash', 'longdash'), ('longdashdot', 'longdashdot'), ('solid', 'solid')], default='solid', max_length=11),
        ),
        migrations.AlterField(
            model_name='multilayerassociation',
            name='layer',
            field=models.ForeignKey(blank=True, db_column='associatedlayer', default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='associated_layer', to='data_manager.Layer'),
        ),
        migrations.AlterField(
            model_name='multilayerassociation',
            name='parentLayer',
            field=models.ForeignKey(db_column='parentlayer', on_delete=django.db.models.deletion.CASCADE, related_name='parent_layer', to='data_manager.Layer'),
        ),
        migrations.AlterField(
            model_name='multilayerdimension',
            name='animated',
            field=models.BooleanField(default=False, help_text='enable auto-toggling of layers across this dimension'),
        ),
        migrations.AlterField(
            model_name='multilayerdimension',
            name='label',
            field=models.CharField(help_text='label to be used in mapping tool slider', max_length=50),
        ),
        migrations.AlterField(
            model_name='multilayerdimension',
            name='name',
            field=models.CharField(help_text='name to be used for selection in admin tool forms', max_length=200),
        ),
        migrations.AlterField(
            model_name='multilayerdimension',
            name='order',
            field=models.IntegerField(default=100, help_text='the order in which this dimension will be presented among other dimensions on this layer'),
        ),
        migrations.AlterField(
            model_name='multilayerdimensionvalue',
            name='label',
            field=models.CharField(help_text='Label for this selection seen in mapping tool slider', max_length=50),
        ),
        migrations.AlterField(
            model_name='multilayerdimensionvalue',
            name='value',
            field=models.CharField(help_text='Actual value of selection', max_length=200),
        ),
        migrations.AlterField(
            model_name='theme',
            name='order',
            field=models.PositiveSmallIntegerField(blank=True, default=10, help_text='input an integer to determine the priority/order of the layer being displayed (1 being the highest)', null=True),
        ),
    ]
