# Generated by Django 3.2.12 on 2022-06-21 22:58

from django.db import migrations, models


def maintain_custom_vector_styles(apps, schema_editor):
    Layer = apps.get_model('data_manager', 'Layer')
    for layer in Layer.objects.all():
        if layer.vector_color in ['custom:color', 'custom:random']:
            layer.custom_style = layer.vector_color.split('custom:')[1]
            layer.save()

def reverse_custom_vector_styles(apps, schema_editor):
    Layer = apps.get_model('data_manager', 'Layer')
    for layer in Layer.objects.all():
        if not layer.custom_style == None:
            layer.vector_color = f"custom:{layer.custom_style}"
            layer.save()


class Migration(migrations.Migration):

    dependencies = [
        ('data_manager', '0044_layer_proxy_url'),
    ]

    operations = [
        migrations.AddField(
            model_name='layer',
            name='custom_style',
            field=models.CharField(blank=True, choices=[(None, '------'), ('color', 'color'), ('random', 'random')], default=None, help_text="Apply a custom styling rule: i.e. 'color' for Native-Land.ca layers, or 'random' to assign arbitary colors", max_length=255, null=True),
        ),
        migrations.RunPython(maintain_custom_vector_styles, reverse_code=reverse_custom_vector_styles)
    ]
